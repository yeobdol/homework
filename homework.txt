<깃강의> 오시영 튜터
*1강
1.깃을 어떻게 배우고 활용할지 살펴보기
2.프로그래밍을 즐겁게 배울수 있는 팁들 알려줌.

[수업목표]
1.나혼자 사용할 수 있는 git 프로젝트
2.프로그래밍 배울 때 마음가짐 탑제

1.깃 수업에서는 뭘배우나
1)즐겁게 프로그래밍 하기 : 맘껏 실험하면됨. 에러를 두려워하지말 것. 좋은개발자는 에러를 안내는것이아니라 찾고 고칠 수 있는  개발자. / 모르면 찾아보고 물어보기(구글링) / 
&)맨처음 프로그래밍 학습하는 사람들을 위한 팁 링크 :
 http://bit.ly/learn-programming-tip
2)배웠으면 써먹자 – 즐겁게 배우기 / 질문할 때 팁 : 목적, 에러정보, 시도한 것
3)깃사용법(혼자, 같이, 모두의 깃)

*2강
2.깃은 뭐고, 깃허브는 무엇인가?
실습)
프로젝트 만들기(git_test) - 메모장(hello.txt) -소스트리에서 로컬저장소 생성 (유형 깃) 하면 git_test에 .git해서 프로그램 생김. -웰컴메세지라고 작업한 내용을 입력하고 커밋하면 추가할 수 있음. text파일과 코드파일은 변경된 내용 알 수 있음.
푸시 : 깃허브(공개된 리퍼블러리)로 올리 수 있음.
-깃으로 할 수 있는 것 
1) 버전을 관리 할 수 있음.(최종의 최종 같은거 필요 없고 변한내역이 있으니 확인 가능 – 히스토리라고 함)
2)작업 단위 나누기 – 변경된 부분에서 어떤 문제가 있는지 파악 가능
3)협업해서 프로젝트 만드는데 유용 – 깃으로 파일내용 자동비교(기본설정으로 코드정도는 가능)
-깃허브로 할 수 있는 것
클라우드와 유사한개념. 
1)컴터에 있는 깃 공유 가능
2)이슈 – 개발해야하는 기능 관리
3)토론 – 여러 기능관련 토론
4)다른사람 프로젝트 구경, 관씸있는 주제/프로젝트 소식 받아보기 
-소스트리 
깃을 쉽게 사용할 수 있는 도구. 까만창에 명령어 직접 입력해서 할 수 있으나 깃을 이해할 수 있게끔 도구를 이용함. 
-대한민국 헌법개정 코드스니펫 복사해서 붙여넣기
15commits 클릭 : 헌법의 개정 이력이 나옴. 
헌법 10호 클릭 빨간색(-)삭제 / 초록색(+)추가 
첫 번째 페이지로 다시 이동해서 issues 클릭 : ohahohah가 헌법 버전 보이도록 release 내역 적기해줌. 하면 밑에 댓글을 달 수 있음. 
url 주소로 내 작업을 보여줄 수 있음. (포폴로 사용)

1-4 버전관리와 commit-개념탑재
강의 흐름 : 개념탑재 – 실습 – 정리
1.깃은 어떻게 버전관리할까?
통상적으로 파일 만들어서 관리. 깃은 파일을 따로 만들 필요 없음. 커밋을 이용해주면됨. 커밋에는 누가, 언제, 현재프로젝트 상태를 관리함. 스냅샷으로 현재 프로젝트 상태를 포착. 
-버전관리 : 누가 무엇을 고쳤는지 알 수 있음. / 커밋 : 현재 프로젝트 상태저장(어떤 부분 변경아님)
-quiz) 대한민국 헌법 commint history 페이지 어딘지 확인하기

1-5 버전관리와 commit-실습 01
김치 요리법 깃 사용해서 만들기 
1)프로젝트 만들기(깃프로젝트가 아니라 컴터에 실습 프로젝트 만들기) 
프로그래밍 꿀팁 : 파일이나 폴더명 영어로 쓸 것. 특수문자(띄어쓰기포함)없이 만들기‘_’사용
-바탕화면에 kimchi-recipe 하고 jeon.txt(메모장) 만들기 
-김치전 만들기 코드스니펫 메모장에 넣고 저장 
*소스트리 설치 제대로 되어있는지 확인 
(한글로 되는지, 계정 잘 로그인 되어있는지 확인)
-로컬 저장소 추가하기 (파일 – 복제/생성 – create) 폴더에 ‘.git’이 생김.(없을 수도 있음. 숨김처리가 되어있음. > 숨김처리 풀기는 코드스니펫 참고) 이렇게 설정해주는 것을 깃초기화(이니셜라이징)이라고 함.
*깃프로젝트 없애는 방법(에러나면 참고)
파일우클릭하고 삭제 누르면 됨. 북마크제거하면 소스트리에서만 안보이고 휴지통에서 하면 진짜 삭제됨. 만약에 깃 때문에 잘 안되면 .git만 삭제해주면 됨. 
-첫 커밋하기 : 더블클릭해서 들어가기 – 파일상태에서 파일 체크하고(add) 커밋내용 작업과 관련된 것. 
- 두 번째 커밋하기 : 커밋한번더하기 코드스니펫 복사해서 텍스트파일 열기. 마지막에 한줄 붙여넣기하고 저장. 파일상태로 다시가면 바뀐거나옴. (오른쪽 마우스 클릭하고 커밋)

1-6 버전관리와 commit-실습 01
여러 가지 파일 수정하기 
1.파일 수정하기 : 코드스니펫 (3~5번 바꾸기)
2.텍스트파일 추가: fied-rice.txt /kimchi-soup.txt 생성 하고 소스트리에서 보면 확인됨.
3.세개 파일 다 체크해서 커밋하기(김치찌개, 김치볶음밥 생성 , 김치전 요리법 업데이트)
4.커밋 한번 더 : fied-rice.txt 업데이트(코드스니펫 복사) 그러면 다른건 놔두고 변경된 내용만 딱 보여줌. 커밋해줌.
5.마지막 커밋 : 수정된 파일중 일부만 커밋하기 
코드 스니펫으로 fied-rice.txt 내용, kimchi-soup.txt도 내용 변경. 
내가 원하는 파일만 체크(윈도우는 +) 커밋 내용 적으면 땡. 일부만 반영하는 것을 스테이징 또는 add라고함. 그럼 다른 것은 남아있음. 작업내용이 깔끔해짐. 
-정리: 커밋의 히스토리는 그래프로 연결되어있고 작성자, 날짜 등 다양한 정보를 포함
커밋되지 않은 내용 

1-7 버전관리와 commit
스스로 먼저 정리하기 
모르는게 뭔지 알아야 복습할 수 있다. 
1)버전관리의 의미 
-나 : 프로그램의 내용이 업데이트될때마다 업데이트 된 것이 무엇인지 나타내는 것. -답 : 프로젝트 상태 변경 정보 인지
2)작업내역 단위인 commit에는 어떤 정보가 포함되어 있어야 잘 버전관리할 수있을까? 
-나 : 변경된 시간, 변경한 사람, 변경된 내용
3)지금까지 실습은 어떤 순서로? 수업(강의정리)  - 혼자 해보기 
-아까 안한거 마저 커밋하기

1-8 원격 repo 사용하기 – 개념 탑재
-커밋작업내용을 공개하거나 보여줘야 협업이 가능함.
-원격 repo, 로컬 repo (repository) 깃으로 관리되는 것을 리모트리포(원격리포), 내컴터에 깃은 로컬리포
-원격리포와 로컬리포 사용법 
깃도 클라우드처럼 원격리포와 로컬리포가 연결된 것처럼 사용. 이 연결하는 것을 트래킹이라고 하고 정확히는 브랜치 트래킹이라고함. 로컬리포기준으로 이해할 것.
원격리포는 작업으로 변경된 내용을 자동으로 반영하지 않음. 수동으로 반영하게 되어있음. 하나의 원격 리포에 여러개의 로컬 리포가 연결되어있음. 로컬에서 원격은 푸시, 원격에서 로컬은 풀. 
로컬리포에 아무것도 없는데 원격리포에 있는 것을 가져오는 것을 클론 복제라고 함. 

1-9 원격 repo 사용하기 – 실습
1)깃허브 접속(로그인)
2)왼쪽 상단에 초록색 new 클릭 – 리포지토리 이름(로컬리포랑 같이해줌.-kimch-recipe) -description에 간단한 설명 하고 create repo 하면 공개가능한 repo 생성완료
3)깃허브 리포, 로컬 리포 트래킹하기 
-소스트리(저장소 설정 – 원격 –추가 – 원격 url은 깃헙에서 따오고, 원격이름은 origin)
-이제 이 내용들을 push 가능 
여기서부터 실습-브랜치 이름 변경(master>name) 
-소스트리로 푸시. 히스토리 선택하고 푸시 버튼 누르면 체크하고 확인하면 끝.
-반영됐는지 확인은 깃허브창에서 새로고침. commits 눌러보면 작업내용 확인할 수 있음. 
-소스트리에서 풀. 원격 리포에 커밋 내용 만들기. 깃허브에서 직접 내용 변경. 찌개를 수정. 찌개클릭하고 에디트파일, 새로운 내용 수정. 커밋메세지 적어주고, 커밋바꾸기 하면 내용 업데이트. 메모장에서 보면 내용변경 안돼있음. 풀눌러주기. 그럼 업데이트 된거 나옴. 그럼 내파일도 변경됨. 
-원격리포 깃허브에서 없애는 방법 : 수업자료 참고(필요할 때 찾아봄.)
-초심자를 위한 꿀패턴 혼자 깃프로젝트 작업할때는 pull – 로컬 repo commit – push 
같은파일 수정하게되면 충돌이 일어남. 
-클론 : 원격 repo를 내 컴퓨터에 가져오기. 
>바탕화면에 kimchi-recipe-together에 클론 할 것.
복제할 repo url 가져오기 (초록색 코드하고 https를 복사 – 소스트리새로만들기- 클론 - url에서 복제 – 원본 url 붙여넣기 – 목적지 경로는 kimchi-recipe-together. 가져올 파일에 붙여넣기. )

1-10 원격 repo 사용하기 – 정리
1)원격 repo 와 로컬 repo 연결해서 내용 반영하고 싶을 때
-나 : 트래킹을 해서 push, pull 해주기
-답 :
2)push하기, pull하기 스스로 해보기 

1-11 1주차 배운 개념 지도 그리기
자료요약과는 다르게 백지에 그려보는 것 
-정보접근을 어떻게 하는지가 프로그래밍에서 중요 

1-12 1주차끝 & 숙제 
TIL을 깃프로젝트 

만들고 싶은 것 : 헙업하는 프로젝트를 만들기
 